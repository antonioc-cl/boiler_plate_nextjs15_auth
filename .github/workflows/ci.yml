name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm type-check

      - name: Lint
        run: pnpm lint

      - name: Format check
        run: pnpm format:check

      - name: Run unit tests with coverage
        run: pnpm test:coverage

      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

      - name: Build application
        run: pnpm build
        env:
          # Required for build, can be dummy values in CI
          DATABASE_URL: 'postgresql://test:test@localhost:5432/test'
          NEXT_PUBLIC_APP_URL: 'http://localhost:3000'
          BETTER_AUTH_SECRET: 'test-secret-for-ci-build-123456789'
          BETTER_AUTH_URL: 'http://localhost:3000'
          PLUNK_API_KEY: 'dummy-key-for-build'
          PLUNK_FROM_EMAIL: 'test@example.com'
          PLUNK_REPLY_TO_EMAIL: 'test@example.com'
          NEXT_PUBLIC_APP_NAME: 'Test App'
          EMAIL_VERIFICATION_REQUIRED: 'false'
          NEXT_PUBLIC_ENABLE_ANALYTICS: 'false'
          NEXT_PUBLIC_ENABLE_SENTRY: 'false'
          SENTRY_SUPPRESS_INSTRUMENTATION_FILE_WARNING: '1'

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Run Playwright tests
        run: pnpm e2e
        env:
          # Required for E2E tests
          DATABASE_URL: 'postgresql://test:test@localhost:5432/test'
          NEXT_PUBLIC_APP_URL: 'http://localhost:3000'
          BETTER_AUTH_SECRET: 'test-secret-for-e2e-tests-123456789'
          BETTER_AUTH_URL: 'http://localhost:3000'
          PLUNK_API_KEY: 'dummy-key-for-e2e'
          PLUNK_FROM_EMAIL: 'test@example.com'
          PLUNK_REPLY_TO_EMAIL: 'test@example.com'
          NEXT_PUBLIC_APP_NAME: 'Test App'
          EMAIL_VERIFICATION_REQUIRED: 'false'
          NEXT_PUBLIC_ENABLE_ANALYTICS: 'false'
          NEXT_PUBLIC_ENABLE_SENTRY: 'false'
          SENTRY_SUPPRESS_INSTRUMENTATION_FILE_WARNING: '1'

      - name: Upload Playwright report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
